name: Build

on:
  push:
    branches:
      - main
    tags:
      - "v*"

  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  sdist:
    permissions:
      contents: read

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          submodules: "recursive"

      - name: Build source distribution (sdist)
        run: pipx run build --sdist

      - name: Upload source distribution as artifact
        uses: actions/upload-artifact@v4
        with:
          name: tadlibcint-sdist
          path: dist/*.tar.gz

  wheel:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    permissions:
      contents: read

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Install Latest Git
        run: |
          sudo add-apt-repository ppa:git-core/ppa -y
          sudo apt-get update
          sudo apt-get install git -y

      - name: Check Git version
        run: git --version

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          submodules: "recursive"

      - name: Setup Python
        uses: mamba-org/setup-micromamba@v2
        with:
          init-shell: bash
          environment-name: py${{ matrix.python }}
          create-args: >-
            python=${{ matrix.python }}
            auditwheel
            c-compiler=1.5.2
            cxx-compiler=1.5.2
            fortran-compiler=1.5.2
            cffi
            cmake
            libgcc<14
            libgfortran<14
            libstdcxx<14
            make
            meson
            ninja
            numpy
            pip
            python-build
            pkgconfig
            patchelf
            sysroot_linux-64=2.12
            unzip
            wheel

      - name: Build wheel (bdist)
        run: |
          set -ex
          python -m build --wheel
          auditwheel show dist/*.whl
          auditwheel repair -w wheels --plat $plat dist/*.whl
        env:
          plat: manylinux_2_17_x86_64 # 2014

      - name: Upload wheel as artifact
        uses: actions/upload-artifact@v4
        with:
          name: tadlibcint-wheel-${{ matrix.python }}
          path: wheels/*.whl

  upload_test_pypi:
    needs: [sdist, wheel]

    runs-on: ubuntu-latest

    environment: release

    permissions:
      contents: read
      id-token: write

    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          path: ${{ github.workspace }}

      - name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  upload_pypi:
    needs: [sdist, wheel, upload_test_pypi]

    runs-on: ubuntu-latest

    environment: release

    permissions:
      contents: read
      id-token: write

    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          path: ${{ github.workspace }}

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
